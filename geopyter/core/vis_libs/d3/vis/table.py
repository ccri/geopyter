def make(data, vis_params):
    uuid = vis_params['id']

    data_string = ','.join(str(d) for d in data)
    column_string = ','.join("'"+str(d)+"'" for d in data[0].keys())

    js_template = (
        # "requirejs(['nbextensions/d3.min'], function(d3) {"
        # "var data = [" + data_string + "];"
        # "var columns = [" + column_string + "];"
        # "console.log(data);"
        # "console.log(columns);"
        # "});"

        "requirejs(['nbextensions/d3.min'], function(d3) {"
        ""
        "var data = [" + data_string + "];"
        "var columns = [" + column_string + "];"
        ""
        "// utility sorting functions"
        "var stringCompare = function(a, b, ascending) {"
        "    a = a.toLowerCase();"
        "    b = b.toLowerCase();"
        "    if (!ascending)"
        "        return a > b ? -1 : a == b ? 0 : 1;"
        "    return a > b ? 1 : a == b ? 0 : -1;"
        "};"
        ""
        "var numberCompare = function(a, b, ascending) {"
        "    if (!ascending)"
        "        return a > b ? -1 : a == b ? 0 : 1;"
        "    return a > b ? 1 : a == b ? 0 : -1;"
        "};"
        ""
        "if (document.getElementById('" + uuid + "') === null)"
        "    element.append($('<div/>', {id:'" + uuid + "'}));"
        ""
        "var table = d3.select('#" + uuid + "').append('table'),"
        "    thead = table.append('thead'),"
        "    tbody = table.append('tbody');"
        ""
        "var ascending = false;"
        ""
        "thead.append('tr')"
        "    .selectAll('th')"
        "    .data(columns)"
        "    .enter()"
        "    .append('th')"
        "        .text(function(column) { return column; })"
        "        .on('click', function(d) {"
        "            rows.sort(function(a, b) {"
        "                if (typeof a[d] == 'string')"
        "                    return a == null || b == null ? 0 : stringCompare(a[d], b[d], ascending);"
        "                return a == null || b == null ? 0 : numberCompare(a[d], b[d], ascending);"
        "            });"
        "            ascending = !ascending;"
        "        });"
        ""
        "var rows = tbody.selectAll('tr')"
        "    .data(data)"
        "    .enter()"
        "    .append('tr');"
        ""
        "var cells = rows.selectAll('td')"
        "    .data(function(row) {"
        "        return columns.map(function(column) {"
        "            return {column: column, value: row[column]};"
        "        });"
        "    })"
        "    .enter()"
        "    .append('td')"
        "        .text(function(d) { return d.value; });"
        "});"
    )

    return ' '.join(js_template.split())